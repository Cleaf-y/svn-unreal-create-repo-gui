<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgState.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgState.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAApgcAAAJNU0Z0AUkBTAIBAQMB
        AAEYAQABGAEAARABAAEQAQAE/wERAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABEAYAAQg4
        AAG9AXcBvQF3ATEBRgHvAT0B7wE9ARABQgHvAT0B7wE9Ae8BPQFaAWsBnAFzCgABvQF3Ab0BdwG1AWoB
        UgFmAVIBZgFSAWYBUgFmAVIBZgG1AWoBvQF3Ab0Bd0oAAecBHAIAAVoBawoAAVoBawIAAecBHAoAAYwB
        WQHGAUwBvQF3CgABvQF3AcYBTAGMAVkqAAHOATkB7wE9Ae8BPQHvAT0B7wE9Ae8BPQHvAT0B7wE9Ae8B
        PQHvAT0BzgE5BgABnAFzAecBHAGMATEBvQF3Ad4BewoAAd4BewG9AXcBjAExAecBHAG9AXcCAAG9AXcB
        jAFZAe8BYQF7AXcBvQF7Ab0BewHeAXsCAAHeAXsBvQF7Ab0CewF3Ae8BYQGMAVkBvQF3JgAB7wE9EgAB
        7wE9BgABOQFnAgABvQF3EgABvQF3AgABvQF3AgABewF3AcYBTAF7AXcBxgF8AcYBfAHGAXwBvQF7AgAB
        vQF7AcYBfAHGAXwBxgF8AXsBdwHGAUwBvQF3JgAB7wE9BgAB3gF7Ab0BdwHeAXsGAAHvAT0GAAExAUYB
        vQF3Ad4BewIAAd4BewG9AXcBcwFOAb0BdwHeAXsGAAHeAXsBWgFrATEBRgIAAXMBagG9AXcBvQF7AcYB
        fAHGAXwBxgF8Ae8BfQG9AXsB7wF9AcYBfAHGAXwBxgF8Ab0BewG9AXcBtQFqJgAB7wE9BgABvQF3AgAB
        vQF3BgAB7wE9BgAB7wE9BgABvQF3BgABvQF3CgAB7wE9AgABUgFmAgABvQF7AcYBfAHGAXwBxgF8AcYB
        fAHGAXwBxgF8AcYBfAHGAXwBxgF8Ab0BewIAAVIBZiYAAe8BPQYAAb0BdwIAAb0BdwYAAe8BPQQAAdYB
        WgG1AVYCAAHeAXsBvQF3AWsBLQIAAaUBFAIAAWsBLQG9AXcB3gF7BgAB7wE9AXsBdwEQAWYCAAHeAXsB
        vQF7Ae8BfQHGAXwBxgF8AcYBfAHGAXwBxgF8Ae8BfQG9AXsB3gF7AgABUgFmJgAB7wE9BgABvQF3AgAB
        vQF3BgAB7wE9BgABWgFrAgABvQF3BgABWgFrBgABvQF3BgABEAFCAYwBZQExAWoGAAG9AXsBxgF8AcYB
        fAHGAXwBxgF8AcYBfAG9AXsGAAFSAWYmAAHvAT0GAAG9AXcB5wEcAb0BdwYAAe8BPQQAAXMBTgHWAVoC
        AAHeAXsBWgFrAZQBUgG9AXcB3gF7Ab0BdwFrAS0CAAFrAS0BvQF3Ad4BewIAAe8BPQEYAWsBEAFiAgAB
        3gF7Ab0BewHvAX0BxgF8AcYBfAHGAXwBxgF8AcYBfAHvAX0BvQF7Ad4BewIAAVIBZiYAAe8BPRIAAe8B
        PQYAAe8BPQ4AAb0BdwYAAb0BdwIAAe8BPQIAAVIBZgIAAb0BewHGAXwBxgF8AcYBfAHGAXwBxgF8AcYB
        fAHGAXwBxgF8AcYBfAG9AXsCAAFSAWYmAAHvAT0GAAG9AXcB7wE9Ab0BdwYAAe8BPQYAAe8BPQG9AXcB
        3gF7CgAB3gF7Ab0BdwHvAT0BWgFrAd4BewFaAWsBMQFGAgABcwFmAb0BdwG9AXsBxgF8AcYBfAHGAXwB
        7wF9Ab0BewHvAX0BxgF8AcYBfAHGAXwBvQF7Ab0BdwG1AWomAAHvAT0SAAHvAT0GAAExAUYCAAG9AXcS
        AAG9AXcCAAG9AXcCAAH3AWYBxgFMAXsBdwHGAXwBxgF8AcYBfAG9AXsCAAG9AXsBxgF8AcYBfAHGAXwB
        ewF3AcYBTAG9AXcmAAHOATkB7wE9Ae8BPQHvAT0B7wE9Ae8BPQHvAT0B7wE9Ae8BPQHvAT0BzgE5BgAB
        nAFzAecBHAG1AVYBvQF3Ad4BewoAAd4BewG9AXcBjAExAecBHAG9AXcCAAGcAXcBjAFZAe8BYQF7AXcB
        vQF7Ab0BewHeAXsCAAHeAXsBvQF7Ab0CewF3Ae8BYQGMAVkBvQF3RgAB5wEcAgABvQF3CgABvQF3AgAB
        CAEhCgABjAFZAcYBTAG9AXcKAAG9AXcBxgFMAYwBWUoAAZwBcwEQAUIB7wE9Ae8BPQHWAloBawG1AVYB
        rQE1ARABQgE5AWcBnAFzCgABnAF3AfcBZgFzAWYBUgFmARABYgExAWoBEAFmAVIBZgFzAWoBewF3Ab0B
        d1IAAXMBTgIAAdYBWgH/AX8B3gF7FgABGAFrAYwBZQF7AXcsAAFCAU0BPgcAAT4DAAEoAwABQAMAARAD
        AAEBAQABAQUAAYAXAAP/AQAC/wHgAQMB4AEDAgAC/wTjAgAB4AEDAYMB4AKAAgAB7wH7AY8B+AKAAgAB
        7gE7AYgBOAGAAwAB7gE7AbgBPgGgAQICAAHuATsBIAEOASABAgIAAe4BOwEgAQ4BOAEOAgAB7gE7ASAB
        AgEgAQICAAHvAfsBvwGCAaABAgIAAe4BOwGPAoADAAHvAfsBjwH4AoACAAHgAQMBgwHgAoACAAL/BOMC
        AAL/AeABAwHgAQMCAAL/Af4BDwH+AT8CAAs=
</value>
  </data>
</root>